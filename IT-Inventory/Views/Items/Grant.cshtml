@using IT_Inventory.ViewModels
@model ItemViewModel

@{
    ViewBag.Title = "Выдать " + Model.Name;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ItemTypeId)

        @if (Model.ItemTypeId != 8)
        {
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.WhoGaveId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.DropDownListFor(model => model.WhoGaveId, StaticData.SelectUsers(true), "", new { @class = "btn btn-default dropdown-toggle" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WhoTookId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.DropDownListFor(model => model.WhoTookId, StaticData.SelectUsers(false), "", new { @class = "btn btn-default dropdown-toggle" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Выдать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
