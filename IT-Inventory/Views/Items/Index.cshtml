@model IT_Inventory.ViewModels.ItemIndexViewModel

@{
    ViewBag.Title = Model.IsUrgent ? "Нехватка оборудования" : "Оборудование";
}

@if (!Model.IsUrgent)
{
    <table width="100%">
        <tr>
            <td>
                <h2>@ViewBag.Title</h2>
            </td>
            <td align="right">
                <h2></h2>
                @foreach (var office in StaticData.GetOffices(true))
                {
                    @Html.ActionLink(office.Name, "Index", new {officeId = office.Id}, office.Id == Model.OfficeId ? new {@class = "btn btn-warning", Style = "color:black"} : new {@class = "btn btn-default", Style = "color:black"})
                    <text>&nbsp;</text>
                }
            </td>
        </tr>
    </table>

    <ul class="pagination">
        @foreach (var type in StaticData.GetTypes())
        {
            <li>
                @(Model.OfficeId != 0
                      ? Html.ActionLink(type.Name, "Index", new {id = type.Id, officeId = Model.OfficeId}, new {Style = "color:black"})
                      : Html.ActionLink(type.Name, "Index", new {id = type.Id}, new {Style = "color:black"}))
            </li>
        }
    </ul>
}
else
{
    <h2>@ViewBag.Title</h2>
    <h2></h2>
}

<table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().ItemType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Quantity)
                </th>
                @if (!Model.IsUrgent && Model.OfficeId == 0)
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Items.First().Location)
                    </th>
                }
                <th></th>
            </tr>
            @foreach (var item in Model.Items)
            {
                <tr style="@(item.Quantity <= item.MinQuantity && !Model.IsUrgent && (item.Location == null || item.Location.Id == 1) ? "color:red" : "")">
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>

                    @if (!Model.IsUrgent && Model.OfficeId == 0)
                    {
                        <td>
                            @if (item.Location == null)
                            {
                                <text>Железноводская</text>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Location.Name)
                            }
                        </td>
                    }
                    <td white-space: nowrap align="right">
                        @if (item.Quantity > 0)
                        {
                            <a href='@Url.Action("Grant", new { id = item.Id })' style="text-decoration:none">
                                <i class="material-icons md-48" style="color:black" title="Выдать">remove_circle_outline</i>
                            </a>
                        }

                        @if (item.ItemType.Id != 8 || item.Quantity == 0)
                        {
                            <a href='@Url.Action("Recieve", new {id = item.Id})' style="text-decoration: none">
                                <i class="material-icons md-48" style="color:black" title="Принять">add_circle_outline</i>
                            </a>
                        }

                        <a href='@Url.Action("Index", "Histories", new {id = item.Id})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color: black" title="История (приход/расход)">history</i>
                        </a>

                        @if (item.Quantity > 0)
                        {
                            <a href='@Url.Action("Transfer", new {id = item.Id})' style="text-decoration: none">
                                <i class="material-icons md-48" style="color:black" title="Переместить на другой склад">compare_arrows</i>
                            </a>
                        }

                        <a href='@Url.Action("Edit", new {id = item.Id})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Редактировать">edit</i>
                        </a>

                        <a href='@Url.Action("Details", new {id = item.Id})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Подробно">info_outline</i>
                        </a>

                        <a href='@Url.Action("Delete", new { id = item.Id })' style="text-decoration:none">
                            <i class="material-icons md-48" style="color:black" title="Удалить">delete_forever</i>
                        </a>
                    </td>
                </tr>
            }
        </table>

        <!-- pager -->
        @if (Model.Pager != null && Model.Pager.EndPage > 1)
        {
            <ul class="pagination">
                @if (Model.Pager.CurrentPage > 1)
                {
                    <li>
                        @(Model.OfficeId != 0
                        ? @Html.ActionLink("Первая", "Index", new {officeId = Model.OfficeId, page = 1, urgent = Model.IsUrgent})
                        : @Html.ActionLink("Первая", "Index", new { page = 1, urgent = Model.IsUrgent }))
                    </li>
                    <li>
                        @(Model.OfficeId != 0
                        ? @Html.ActionLink("Предыдущая", "Index", new {officeId = Model.OfficeId, page = Model.Pager.CurrentPage - 1, urgent = Model.IsUrgent})
                        : @Html.ActionLink("Предыдущая", "Index", new { page = Model.Pager.CurrentPage - 1, urgent = Model.IsUrgent }))
                    </li>
                }

                @for (var pageNum = Model.Pager.StartPage; pageNum <= Model.Pager.EndPage; pageNum++)
                {
                    <li class="@(pageNum == Model.Pager.CurrentPage ? "active" : "")">
                        @(Model.OfficeId != 0
                        ? @Html.ActionLink(pageNum.ToString(), "Index", new {officeId = Model.OfficeId, page = pageNum, urgent = Model.IsUrgent})
                        : @Html.ActionLink(pageNum.ToString(), "Index", new { page = pageNum, urgent = Model.IsUrgent }))
                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        @(Model.OfficeId != 0
                        ? @Html.ActionLink("Следующая", "Index", new {officeId = Model.OfficeId, page = Model.Pager.CurrentPage + 1, urgent = Model.IsUrgent})
                        : @Html.ActionLink("Следующая", "Index", new { page = Model.Pager.CurrentPage + 1, urgent = Model.IsUrgent }))
                    </li>
                    <li>
                        @(Model.OfficeId != 0
                        ? @Html.ActionLink("Последняя", "Index", new {officeId = Model.OfficeId, page = Model.Pager.TotalPages, urgent = Model.IsUrgent})
                        : @Html.ActionLink("Последняя", "Index", new { page = Model.Pager.TotalPages, urgent = Model.IsUrgent }))
                    </li>
                }
            </ul>
        }
