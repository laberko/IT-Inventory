@using IT_Inventory.ViewModels
@model ItemViewModel

@{
    ViewBag.Title = "Добавить " + Model.ItemTypeName.ToLower();
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemTypeId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Quantity, "", new {@class = "text-danger"})
            </div>
        </div>

        @for (var i = 0; i < Model.AttributeValues.Count; i++)
        {
            <div class="form-group">
                @Html.HiddenFor(model => model.AttributeValues[i].Id)
                @Html.HiddenFor(model => model.AttributeValues[i].AttributeId)
                @Html.Label(Model.AttributeValues[i].Name, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
            @if (Model.AttributeValues[i].AttributeId == 2)
            {
                @Html.DropDownListFor(model => model.AttributeValues[i].Value, StaticData.SelectColors(), "", new {@class = "btn btn-default dropdown-toggle"})
            }
            else
            {
                @Html.EditorFor(model => model.AttributeValues[i].Value, new {htmlAttributes = new {@class = "form-control"}})
            }
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", null, null, null, new { href = Request.UrlReferrer })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
