@model IT_Inventory.ViewModels.SupportRequestViewModel

@{
    ViewBag.Title = "Новая заявка в техподдержку";
}

<h2>@ViewBag.Title</h2>

<form action="" method="post" enctype="multipart/form-data">
    @*@using (Html.BeginForm())
        {*@
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Category, new SelectList(StaticData.RequestCategory, "Key", "Value"), "", new {@class = "btn btn-default dropdown-toggle"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Urgency, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Urgency, new SelectList(StaticData.RequestUrgency, "Key", "Value"), "", new {@class = "btn btn-default dropdown-toggle"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, 10, 55, null)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Upload, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Upload, new {type = "file"})
            </div>
        </div>

        @if (User.IsInRole(@"RIVS\IT-Dep"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.FromId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FromId, StaticData.SelectUsers(false), "", new {@class = "btn btn-default dropdown-toggle"})
                    @Html.ValidationMessageFor(model => model.FromId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ToId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ToId, StaticData.SelectUsers(true), "", new {@class = "btn btn-default dropdown-toggle"})
                    @Html.ValidationMessageFor(model => model.ToId, "", new {@class = "text-danger"})
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default"/>
            </div>
        </div>
    </div>
    @*}*@
</form>



<div>
        @Html.ActionLink("Назад к списку", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
