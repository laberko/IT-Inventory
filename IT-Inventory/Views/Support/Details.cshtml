@model IT_Inventory.Models.SupportRequest

@{
    ViewBag.Title = "Подробно";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>Заявка в техподдержку</h4>
    <hr/>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.From)
        </dt>
        <dd>
            @ViewBag.UserName
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.To)
        </dt>
        <dd>
            @ViewBag.ItUserName
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FromComputer)
        </dt>
        <dd>
            @ViewBag.ComputerName
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreationTime)
        </dt>
        <dd>
            @Model.CreationTime.ToString("f")
        </dd>

        @if (Model.StartTime != null)
        {

            <dt>
                @Html.DisplayNameFor(model => model.StartTime)
            </dt>
            <dd>
                @(((DateTime) Model.StartTime).ToString("f"))
            </dd>
        }

        @if (Model.FinishTime != null)
        {

            <dt>
                @Html.DisplayNameFor(model => model.FinishTime)
            </dt>
            <dd>
                @(((DateTime) Model.FinishTime).ToString("f"))
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Text)
        </dt>
        <dd>
            @Html.NewLine2Br(Model.Text)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Urgency)
        </dt>
        <dd>
            @StaticData.RequestUrgency[Model.Urgency]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd>
            @StaticData.RequestCategory[Model.Category]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd>
            @StaticData.RequestState[Model.State]
        </dd>

        @if (Model.State > 0)
        {
            if (!string.IsNullOrEmpty(Model.SoftwareInstalled))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.SoftwareInstalled)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.SoftwareInstalled)
                </dd>
            }

            if (!string.IsNullOrEmpty(Model.SoftwareRepaired))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.SoftwareRepaired)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.SoftwareRepaired)
                </dd>
            }

            if (!string.IsNullOrEmpty(Model.SoftwareUpdated))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.SoftwareUpdated)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.SoftwareUpdated)
                </dd>
            }

            if (!string.IsNullOrEmpty(Model.SoftwareRemoved))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.SoftwareRemoved)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.SoftwareRemoved)
                </dd>
            }

            if (Model.HardwareId > 0)
            {
                <dt style="white-space: nowrap;">
                    @Html.DisplayNameFor(model => model.HardwareId)
                </dt>
                <dd>
                    @(StaticData.GetItemFullName(Model.HardwareId) + " (" + Model.HardwareQuantity + " шт.)")
                </dd>
            }

            if (!string.IsNullOrEmpty(Model.OtherActions))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.OtherActions)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.OtherActions)
                </dd>
            }

            if (!string.IsNullOrEmpty(Model.Comment))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Comment)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Comment)
                </dd>
            }
        }
        @if (Model.State == 2)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Mark)
            </dt>
            <dd>
                @if (Model.Mark > 0)
                {
                    @Html.DisplayFor(model => model.Mark)
                }
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FeedBack)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.FeedBack)
            </dd>
        }

    </dl>

</div>

@if (Model.File != null)
{
    if (Model.File.IsImage)
    {
        <div style="width: 100%; float: left; text-align: center">
            <img src="~/SupportFiles/@Model.FileNameLastPart" alt="" style="max-width: 100%;" title="">
        </div>
    }
    else
    {
        <p>
            @Html.ActionLink("Файл: " + Model.File.FileName, "DownloadFile", new { filename = Model.File.Path })
        </p>
    }
}

<p>
    @Html.ActionLink("Редактировать", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Назад к списку", "Index")
</p>
