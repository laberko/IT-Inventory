@model IT_Inventory.ViewModels.SupportIndexViewModel

@if (!string.IsNullOrEmpty(Model.SearchString))
{
    <h4>@Model.SearchString</h4>
}

@if (Model.SupportRequests.Count > 0)
{
    <table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().CreationTime)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().StartTime)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().FinishTime)
        </th>
        @if (Model.IsItUser)
        {
            <th>
                @Html.DisplayNameFor(model => model.SupportRequests.First().From)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.SupportRequests.First().FromComputer)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().Text)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().Urgency)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().Category)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().State)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().To)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SupportRequests.First().Mark)
        </th>
        <th></th>
    </tr>

    @for (var i = 0; i < Model.SupportRequests.Count; i++)
    {
        var item = Model.SupportRequests[i];
        if (i > 0 && item.State != Model.SupportRequests[i - 1].State)
        {
            <tr>
                <td colspan="13" style="border-top-width: 2px">
                    <h4>
                        @switch (item.State)
                        {
                            case 1:
                            {
                                <text>В работе:</text>
                            }
                                break;
                            case 2:
                            {
                                <text>Завершенные:</text>
                            }
                                break;
                        }
                    </h4>
                </td>
            </tr>
        }

        <tr >
            <td>
                @switch (item.State)
                {
                    case 0:
                        <font color="red">&#11044</font>
                        break;
                    case 1:
                        <font color="orange">&#11044</font>
                        break;
                    case 2:
                        <font color="green">&#11044</font>
                        break;
                }
            </td>

            <td>
                @item.CreationTime.ToString("g")
            </td>

            <td>
                @if (item.StartTime != null)
                {
                    @(((DateTime) item.StartTime).ToString("g"))
                }
            </td>

            <td>
                @if (item.FinishTime != null)
                {
                    @(((DateTime) item.FinishTime).ToString("g"))
                }
            </td>

            @if (Model.IsItUser)
            {
                <td white-space: nowrap>
                    @(!string.IsNullOrEmpty(Model.SearchString) 
                        ? Html.ActionLink(item.From.ShortName, "Details", "People", new {id = item.From.Id}, null) 
                        : Html.ActionLink(item.From.ShortName, "Index", new {searchUserId = item.From.Id}))
                </td>

                <td white-space: nowrap>
                    @if (item.FromComputer != null)
                    {
                        @Html.ActionLink(item.FromComputer.ComputerName, "Index", new {searchCompId = item.FromComputer.Id})
                    }
                </td>
            }

            <td style="font-size: small">
                @Html.DisplayFor(modelItem => item.Text)
            </td>

            <td>
                @Html.DisplayFor(modelItem => StaticData.RequestUrgency[item.Urgency])
            </td>

            <td>
                @Html.DisplayFor(modelItem => StaticData.RequestCategory[item.Category])
            </td>

            <td style="@(item.State == 0 ? "color:red" : "")">
                @Html.DisplayFor(modelItem => StaticData.RequestState[item.State])
            </td>

            <td white-space: nowrap>
                @if (item.To != null)
                {
                    @Html.DisplayFor(modelItem => item.To.ShortName)
                }
            </td>

            <td>
                @if (item.Mark > 0)
                {
                    @Html.DisplayFor(modelItem => item.Mark)
                }
            </td>

            <td white-space: nowrap>
                @if (Model.IsItUser)
                {
                    if (item.State == 0)
                    {
                        <a href='@Url.Action("AcceptRequest", "Support", new {id = item.Id})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Принять">check_box</i>
                        </a>
                    }
                    else if (item.State == 1 && item.To != null && Model.UserId == item.To.Id)
                    {
                        <a href='@Url.Action("FinishRequest", "Support", new {id = item.Id})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Завершить">done</i>
                        </a>
                    }
                }

                <a href='@Url.Action("Details", "Support", new {id = item.Id})' style="text-decoration: none">
                    <i class="material-icons md-48" style="color:black" title="Подробно">info_outline</i>
                </a>

                @if (item.File != null)
                {
                    if (item.File.IsImage)
                    {
                        <a href='@Url.Action("DownloadImage", "Support", new {filename = item.File.Path})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Изображение">image</i>
                        </a>
                    }
                    else
                    {
                        <a href='@Url.Action("DownloadFile", "Support", new {filename = item.File.Path})' style="text-decoration: none">
                            <i class="material-icons md-48" style="color:black" title="Файл">insert_drive_file</i>
                        </a>
                    }
                }

                @if (Model.IsItUser || item.State != 2)
                {
                    <a href='@Url.Action("Edit", "Support", new {id = item.Id})' style="text-decoration: none">
                        <i class="material-icons md-48" style="color:black" title="Редактировать">edit</i>
                    </a>
                }
                else
                {
                    <a href='@Url.Action("Edit", "Support", new {id = item.Id})' style="text-decoration: none">
                        <i class="material-icons md-48" style="color:black" title="Оценить">thumb_up</i>
                    </a>
                }

                @if (Model.IsItUser)
                {
                    <a href='@Url.Action("Delete", "Support", new {id = item.Id})' style="text-decoration: none">
                        <i class="material-icons md-48" style="color:black" title="Удалить">delete_forever</i>
                    </a>
                }
            </td>
        </tr>
    }
    </table>
}

<!-- pager -->
@if (Model.Pager != null && Model.Pager.EndPage > 1)
{
    <ul class="pagination">
        @if (Model.Pager.CurrentPage > 1)
        {
            <li>
                @Html.ActionLink("Первая", "Index", new { state = ViewBag.State, searchUserId = ViewBag.SearchUserId, searchCompId = ViewBag.SearchCompId, page = 1 })
            </li>
            <li>
                @Html.ActionLink("Предыдущая", "Index", new { state = ViewBag.State, searchUserId = ViewBag.SearchUserId, searchCompId = ViewBag.SearchCompId, page = Model.Pager.CurrentPage - 1 })
            </li>
        }

        @for (var pageNum = Model.Pager.StartPage; pageNum <= Model.Pager.EndPage; pageNum++)
        {
            <li class="@(pageNum == Model.Pager.CurrentPage ? "active" : "")">
                @Html.ActionLink(pageNum.ToString(), "Index", new { state = ViewBag.State, searchUserId = ViewBag.SearchUserId, searchCompId = ViewBag.SearchCompId, page = pageNum })
            </li>
        }

        @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
        {
            <li>
                @Html.ActionLink("Следующая", "Index", new { state = ViewBag.State, searchUserId = ViewBag.SearchUserId, searchCompId = ViewBag.SearchCompId, page = Model.Pager.CurrentPage + 1 })
            </li>
            <li>
                @Html.ActionLink("Последняя", "Index", new { state = ViewBag.State, searchUserId = ViewBag.SearchUserId, searchCompId = ViewBag.SearchCompId, page = Model.Pager.TotalPages })
            </li>
        }
    </ul>
}