@model IT_Inventory.ViewModels.SupportRequestViewModel

@{
    ViewBag.Title = "Редактировать заявку в техподдержку";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.EditByIt)

        @if (Model.State < 2)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Urgency, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Urgency, new SelectList(StaticData.RequestUrgency, "Key", "Value"), "", new {@class = "btn btn-default dropdown-toggle"})
                    @Html.ValidationMessageFor(model => model.Urgency, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Category, new SelectList(StaticData.RequestCategory, "Key", "Value"), "", new {@class = "btn btn-default dropdown-toggle"})
                    @Html.ValidationMessageFor(model => model.Category, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Text, 10, 55, null)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Urgency)
            @Html.HiddenFor(model => model.Category)
            @Html.HiddenFor(model => model.Text)
        }

        @if (Model.State == 2)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Mark, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Mark, Enumerable.Range(1, 5).Select(i => new SelectListItem {Text = i.ToString(), Value = i.ToString()}), "", new {@class = "btn btn-default dropdown-toggle"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeedBack, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.FeedBack, 10, 55, null)
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Mark)
            @Html.HiddenFor(model => model.FeedBack)
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
